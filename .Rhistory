lng=~as.numeric(Lon), lat=~as.numeric(Lat),
popup = paste("<a><strong>", df$NOMBRE, "</strong></a><br>",
df$NRO, "<br>"))
estaciones -> leaflet() %>%
addTiles() %>%
addMarkers(data = df ,
lng=~as.numeric(Lon), lat=~as.numeric(Lat),
popup = paste("<a><strong>", df$NOMBRE, "</strong></a><br>",
df$NRO, "<br>"))
estaciones <- leaflet() %>%
addTiles() %>%
addMarkers(data = df ,
lng=~as.numeric(Lon), lat=~as.numeric(Lat),
popup = paste("<a><strong>", df$NOMBRE, "</strong></a><br>",
df$NRO, "<br>"))
### barrios populares
library(htmlwidgets)
saveWidget(estaciones, file = "estaciones.html", selfcontained = TRUE)
library(purrr)
# Función para convertir coordenadas en formato DMS a grados decimales
dms_to_decimal <- function(dms) {
dms_split <- strsplit(dms, " ")[[1]]
# Convertir la latitud
lat_dms <- dms_split[1]
lat_direction <- substring(lat_dms, nchar(lat_dms))
lat_values <- as.numeric(unlist(strsplit(sub("°|'|S|N", "", lat_dms), "′")))
lat_decimal <- lat_values[1] + lat_values[2] / 60
if(lat_direction == "S") {
lat_decimal <- -lat_decimal
}
# Convertir la longitud
long_dms <- dms_split[2]
long_direction <- substring(long_dms, nchar(long_dms))
long_values <- as.numeric(unlist(strsplit(sub("°|'|O|E", "", long_dms), "′")))
long_decimal <- long_values[1] + long_values[2] / 60
if(long_direction == "O") {
long_decimal <- -long_decimal
}
# Retornar los valores de latitud y longitud en grados decimales
return(c(lat = lat_decimal, long = long_decimal))
}
# Aplicar la función a toda la columna y crear nuevas columnas Lat y Lon
df <- df %>%
mutate(Lat_Lon = map(Coordenadas, dms_to_decimal)) %>%
mutate(Lat = map_dbl(Lat_Lon, 1),
Lon = map_dbl(Lat_Lon, 2))
View(df)
Comisarias_GeoJson <- geojson_sf("C:/Users/Sebastián/Documents/Trabajos externos/Municipalidad de Castelli/Comisarias PBA/comisarias.geojson")
library(geojsonsf)
Comisarias_GeoJson <- geojson_sf("C:/Users/Sebastián/Documents/Trabajos externos/Municipalidad de Castelli/Comisarias PBA/comisarias.geojson")
View(Comisarias_GeoJson)
Comisarias_GeoJson <- geojson_sf("C:/Users/Sebastián/Documents/Trabajos externos/Municipalidad de Castelli/Establecimientos_salud_publicos_alta_al20220721.geojson")
View(Comisarias_GeoJson)
library(geojsonsf)
library(leaflet)
library(dplyr)
library(shiny)
library(leaflet)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = "<strong>Buenos Aires</strong><br>
<img src='https://upload.wikimedia.org/wikipedia/commons/0/08/Obelisco_di_Buenos_Aires.jpg' width='200px'>")
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = "<strong>Buenos Aires</strong><br>
<img src='https://www.infobae.com/new-resizer/8cM8XGk-zhyT69LLvYZcPos4it0=/992x850/filters:format(webp):quality(85)/s3.amazonaws.com/arc-wordpress-client-uploads/infobae-wp/wp-content/uploads/2019/02/13105727/Marcha-Movimientos-sociales-Obelisco-3.jpeg' width='200px'>")
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = '
<div id="carouselExample" class="carousel slide" data-ride="carousel">
<div class="carousel-inner">
<div class="carousel-item active">
<img class="d-block w-100" src="https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg" width="200px">
</div>
</div>
<a class="carousel-control-prev" href="#carouselExample" role="button" data-slide="prev">
<span class="carousel-control-prev-icon" aria-hidden="true"></span>
<span class="sr-only">Previous</span>
</a>
<a class="carousel-control-next" href="#carouselExample" role="button" data-slide="next">
<span class="carousel-control-next-icon" aria-hidden="true"></span>
<span class="sr-only">Next</span>
</a>
</div>
')
})
}
shinyApp(ui, server)
runApp('test')
data <- data.frame(
lng = c(-1,0,1,2),
lat = c(-1,0,1,2),
label = c("p1","p2","p3","p4"),
# some random images I picked up from google images
# it can be both local or remote
image_link = c(
"https://jessehouwing.net/content/images/size/w2000/2018/07/stackoverflow-1.png",
"https://store-images.s-microsoft.com/image/apps.18496.14408192455588579.aafb3426-654c-4eb2-b7f4-43639bdd3d75.2c522ca4-9686-4ee2-a4ac-cdbfaf92c618?mode=scale&q=90&h=1080&w=1920",
"https://mk0jobadderjftub56m0.kinstacdn.com/wp-content/uploads/stackoverflow.com-300.jpg",
# row number 4 use the same link as row number 1
"https://mk0jobadderjftub56m0.kinstacdn.com/wp-content/uploads/stackoverflow.com-300.jpg"
)
)
library(leaflet)
leaflet(data = data) %>%
addTiles() %>%
addCircleMarkers(
lng = ~lng,
lat = ~lat,
popup = ~paste0(
"<img src='",image_link,"' width='50px' height='50px'>"
)
)
library(shiny)
library(leaflet)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = '
<div id="carouselExample" class="carousel slide" data-ride="carousel">
<div class="carousel-inner">
<div class="carousel-item active">
<img class="d-block w-100" src="https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg" width="200px">
</div>
</div>
<a class="carousel-control-prev" href="#carouselExample" role="button" data-slide="prev">
<span class="carousel-control-prev-icon" aria-hidden="true"></span>
<span class="sr-only">Previous</span>
</a>
<a class="carousel-control-next" href="#carouselExample" role="button" data-slide="next">
<span class="carousel-control-next-icon" aria-hidden="true"></span>
<span class="sr-only">Next</span>
</a>
</div>
')
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = '
<div id="carouselExample" class="carousel slide" data-ride="carousel">
<div class="carousel-inner">
<div class="carousel-item active">
<img class="d-block w-100" src="https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg" width="200px">
</div>
</div>
<a class="carousel-control-prev" href="#carouselExample" role="button" data-slide="prev">
<span class="carousel-control-prev-icon" aria-hidden="true"></span>
<span class="sr-only">Previous</span>
</a>
<a class="carousel-control-next" href="#carouselExample" role="button" data-slide="next">
<span class="carousel-control-next-icon" aria-hidden="true"></span>
<span class="sr-only">Next</span>
</a>
</div>
')
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
ui <- fluidPage(
tags$head(
tags$script(HTML('
$(document).ready(function(){
$("#carouselExample").carousel();
});
'))
),
leafletOutput("mymap")
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = '
<div id="carouselExample" class="carousel slide" data-ride="carousel">
<div class="carousel-inner">
<div class="carousel-item active">
<img class="d-block w-100" src="https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg" width="200px">
</div>
<div class="carousel-item">
<img class="d-block w-100" src="https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg" width="200px">
</div>
</div>
<a class="carousel-control-prev" href="#carouselExample" role="button" data-slide="prev">
<span class="carousel-control-prev-icon" aria-hidden="true"></span>
<span class="sr-only">Previous</span>
</a>
<a class="carousel-control-next" href="#carouselExample" role="button" data-slide="next">
<span class="carousel-control-next-icon" aria-hidden="true"></span>
<span class="sr-only">Next</span>
</a>
</div>
')
})
}
shinyApp(ui, server)
install.packages("slickR")
library(shiny)
library(leaflet)
library(slickR)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
# Crear un carrusel usando slickR
slick_carousel <- slickR(
obj = c(
"https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg",
"https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg",
"https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg"
),
slideType = "img",
slickOpts = list(
dots = TRUE,
autoplay = TRUE,
arrows = TRUE,
infinite = TRUE
)
)
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = htmltools::HTML(as.character(slick_carousel)))
})
}
shinyApp(ui, server)
slick_carousel <- settings(
obj = c(
"https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg",
"https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg",
"https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg"
),
slideType = "img",
slickOpts = list(
dots = TRUE,
autoplay = TRUE,
arrows = TRUE,
infinite = TRUE
)
)
library(slickR)
# Crear el carrusel con slickR
slick_carousel <- slickR(
obj = c(
"https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg",
"https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg",
"https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg"
),
slideType = "img"
) + settings(
dots = TRUE,
autoplay = TRUE,
arrows = TRUE,
infinite = TRUE
)
# Ver el carrusel en la vista previa de RStudio
slick_carousel
library(shiny)
library(leaflet)
library(slickR)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
# Crear el carrusel usando slickR con settings()
slick_carousel <- slickR(
obj = c(
"https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg",
"https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg",
"https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg"
),
slideType = "img"
) + settings(
dots = TRUE,
autoplay = TRUE,
arrows = TRUE,
infinite = TRUE
)
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = htmltools::HTML(as.character(slick_carousel)))
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
library(slickR)
ui <- fluidPage(
leafletOutput("mymap")
)
server <- function(input, output, session) {
# Crear el carrusel usando slickR con settings()
slick_carousel <- slickR(
obj = c(
"https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg",
"https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg",
"https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg"
),
slideType = "img"
) + settings(
dots = TRUE,
autoplay = TRUE,
arrows = TRUE,
infinite = TRUE
)
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = htmltools::HTML(as.character(slick_carousel)))
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
library(slickR)
ui <- fluidPage(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "slick/slick.css"),
tags$link(rel = "stylesheet", type = "text/css", href = "slick/slick-theme.css"),
tags$script(src = "slick/slick.min.js"),
tags$script(HTML(
"
Shiny.addCustomMessageHandler('initSlick', function(message) {
$(document).ready(function() {
$('.slick-carousel').slick();
});
});
"
))
),
leafletOutput("mymap")
)
server <- function(input, output, session) {
# Crear el carrusel usando slickR con settings()
slick_carousel <- slickR(
obj = c(
"https://mediaim.expedia.com/destination/1/e4fc904a4e9ad59d3769e272f789ad4d.jpg",
"https://turismo.buenosaires.gob.ar/sites/turismo/files/obelisco_ba_verde_1200.jpg",
"https://upload.wikimedia.org/wikipedia/commons/f/fc/Buenos_Aires_%2820234294752%29.jpg"
),
slideType = "img"
) + settings(
dots = TRUE,
autoplay = TRUE,
arrows = TRUE,
infinite = TRUE
)
output$mymap <- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng = -58.3816, lat = -34.6037,
popup = htmltools::HTML(as.character(slick_carousel)))
})
# Enviar mensaje para inicializar slickR
observe({
session$sendCustomMessage(type = 'initSlick', message = list())
})
}
shinyApp(ui, server)
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
View(df_obras)
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
View(df_obras)
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
View(df_obras)
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
install.packages("leaflegend")
install.packages("leaflegend")
install.packages("leaflegend")
shiny::runApp('Trabajos externos/Municipalidad de Castelli/Mapa-Obras-Castelli')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
shiny::runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
runApp('Trabajos Propios/Urbano/OMI/Tablero-OMI')
